/*/ Comment test
*/
page
    div.class#id[data-ololo="123"].ahah[attr1][attr2=""][attr3='hello']
        "Hello "
        strong
            ('wo' + 'r')
            (function() { return 'ld'; })
        "!"


/* Another comment test */
tpl1 $arg1 $arg2
    div[attr1]
        ATTR ('a' + 1) "bebe"
        @attr2

        ($arg2 + $arg2)

        CALL tpl-2 ($arg1 + 'yo')
            em
                "cool"
            CALL tpl3
                "hihihi"
        CALL tpl-2 "test"

        SET $somevar ({a: {b: $arg1}})
        SET $somevar2
            p
                "000"

        WITH $somevar3 ($somevar.a.b.c)
            "no"
        ELSE
            "yes"

        WITH $somevar4 ($somevar.a.b)
            ((($somevar2)))
            ($somevar4)
            "!!!"


/* Mulitline
   comment
   test */
tpl-2 $a
    h1
        ($a)
    TEST PAYLOAD
        "aaa"
    CHOOSE
        WHEN PAYLOAD
            h3
                "1"
                PAYLOAD
                "1"
        OTHERWISE
            "nothing"


tpl3 $b
    CHOOSE
        WHEN ($b)
            "bbbbb"
            ($b)
            "bbbbb"
        OTHERWISE
            "BBBBB"
            PAYLOAD


eachtest $arg
    ul
        EACH $cur ($arg)
            li
                $cur
                "|"
                EACH $cur ($cur)
                    b
                        $cur
                "|"


eachtest2 $arg
    EACH ($arg)
        "eeee"
    ul
        EACH $value ($arg)
            li
                "|"
                EACH $key $val $value
                    b
                        ($key + ' = ' + $val)
                "|"


eachtest3 $arg1 $arg2
    EACH ($arg1)
        "eeee"
    ELSE
        "no eeee"

    ul
        EACH $value ($arg2)
            li
                "|"
                EACH $key $val $value
                    b
                        ($key + ' = ' + $val)
                ELSE
                    "no b"
                "|"
        ELSE
            li
                "no items"


// More comment
unescaped
    div
        @aa "s\"<>ss"
        ATTR '''he''' '''ha'''
    """<p>\"hello\"</p>"""
    '''<a>\'world\'</a>'''
    ((('<div>' + 'indeed' + '</div>')))


dynamic-call
    CALL ('dynamic-call' + '-call') ('yo')
        "ooooo"


dynamic-call-call $arg
    PAYLOAD
    ($arg + $arg + $arg)


mem-test
    MEM "m0" "aaaaa"
    div#m1
        MEM "m1"
    CALL mem-test2


mem-test2
    div#m2
        MEM ('m2' + '-999') ({node: this, aa: 'bb'})


act-test
    JS
        if (true) { document.actTest = 'Yo!'; }
    div
        EACH ({piu: 'boom'})
            JS $item $index $obj
                document.actTest2 = 'Hahaha' + $item + $index + ($obj && $obj.piu);


trigger-test
    div
        TRIGGER "div1" (123)
    p
        TRIGGER "p1" (234) (345)
        span
            TRIGGER "span1" (456)
            TRIGGER "span2"


with-test $e
    WITH $details ($e.ololo.piupiu)
        $details


lazy-payload-test
    JS
        window._lazyPayload = 1

    h1
        CALL lazy-payload-inner "test1"
            span
                (window._lazyPayload++)
    h2
        CALL lazy-payload-inner "test2"
    h3
        CALL lazy-payload-inner "test3" "test4"
            em
                (window._lazyPayload++)

    JS
        delete window._lazyPayload


lazy-payload-inner $prefix
    TEST PAYLOAD
        TEST PAYLOAD
            p
                ($prefix)
                PAYLOAD
    h6
        ($prefix)
        PAYLOAD
    TEST PAYLOAD
        div
            ($prefix)
            PAYLOAD

    CALL lazy-payload-inner-inner PAYLOAD


lazy-payload-inner-inner $arg
    footer
        $arg
        "|"
        ((($arg)))


safe-call-test
    CALL safe-call-test-inner (true)
        span
            "payload"
    EXCEPT
        em
            "error1"
    CALL safe-call-test-inner (false)
    EXCEPT
        strong
            "error2"

    CALL ('ololo' + 'piu')


    EXCEPT
        div
            "error3"


safe-call-test-inner $error
    CHOOSE
        WHEN ($error)
            JS
                throw new Error('No pasaran')
        OTHERWISE
            p
                "ok"


default-args-test
    h1
        CALL default-args-test-inner
    h2
        CALL default-args-test-inner arg4="999" arg3=(1 + 2)
    h3
        CALL default-args-test-inner "1" "2" "3" "4"
    h4
        CALL default-args-test-inner "11" arg4 = "22"
    h5
        CALL default-args-test-inner arg2="222"


default-args-test-inner $arg1 $arg2="hello" $arg3 $arg4=({a: 'b'})
    span
        $arg1
    em
        $arg2
    strong
        $arg3
    u
        (JSON.stringify($arg4))


multiline-test
    CALL multiline-test-inner "aaa1" "aaa2" "aaa3" "aaa4"

    CALL \
        multiline-test-inner \
            "bbb1" \
            "bbb2" "bbb3" \
            "bbb4"


multiline-test\
  -inner \
    $arg1 \
           \
    $arg2 $arg3 \


    $arg4
    h1.class1\
        .class2.class3\
        .class4
        $arg1
    h2[attr1 = \
        ('val1')]\
      [attr2\
         =\
         "val2"\
      ]
        $arg2
    h3
        $arg3
    h4
        $arg4
